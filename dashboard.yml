views:
  - title: Media Player
    panel: true
    cards:
      - type: custom:floorplan-card
        config:
          log_level: info
          image:
            use_screen_width: false
            sizes:
              - min_width: 0
                location: /local/floorplan/media-player-card-mobile.svg
                cache: false
              - min_width: 700
                location: /local/floorplan/media-player-card.svg
                cache: false
          stylesheet:
            location: /local/floorplan/media-player-card.css
            cache: true
          defaults:
            hover_action: false
            tap_action: false
            hold_action: false
          rules:
            - entities:
                - entity: input_boolean.media_card_update_imagery
                  element: now_playing_image
              tap_action:
                - service: input_boolean.toggle
                  service_data:
                    entity_id: input_boolean.media_card_show_discart
              state_action:
                - service: floorplan.class_set
                  service_data: |
                    >
                      if((hass.states["input_boolean.media_card_show_discart"].state
                      == "on") &&
                      (hass.states[hass.states["sensor.media_card_player_id"].state].state
                      === "playing"))
                        return "rotate-on";
                      else 
                        return "rotate-off";            
                - service: floorplan.image_set
                  service_data: |
                    >
                    var image_name = hass.states["sensor.url_to_image"].state;
                    if (image_name.startsWith('http'))
                      return hass.states["sensor.url_to_image"].state;
                    else if (image_name.startsWith('/api'))
                      return 'http://192.168.1.166:8123' + hass.states["sensor.url_to_image"].state;
                    else if (image_name.startsWith('/imageproxy'))
                      return 'http://192.168.1.166:8095' + hass.states["sensor.url_to_image"].state;
                    else
                      return 'http://192.168.1.166:8123/local/empty.png';
            - entity: input_text.media_card_url_to_fanart_image
              element: fanart
              state_action:
                - service: floorplan.image_set
                  service_data: >
                    > var image_name =
                    hass.states["input_text.media_card_url_to_fanart_image"].state;

                    if (image_name.startsWith('http'))
                      return image_name;
                    else if (image_name.startsWith('/api'))
                      return 'http://192.168.1.166:8123' + image_name;
                    else if (image_name.startsWith('/imageproxy'))
                      return 'http://192.168.1.166:8095' + image_name;
                    else
                      return 'http://192.168.1.166:8123/local/empty.png';                     
            - entity: input_select.ma_list_of_linkable_players
              state_action:
                service: floorplan.text_set
                service_data: ${entity.state}
              tap_action:
                service: input_select.select_next
            - entity: input_text.media_card_explicit_language
              state_action:
                service: floorplan.class_set
                service_data:
                  class: >-
                    ${(entity.state === "true") ? "always-visible" :
                    "always-invisible"}
            - entity: input_text.media_card_hi_res_track
              state_action:
                service: floorplan.class_set
                service_data:
                  class: >-
                    ${(entity.state === "true") ? "always-visible" :
                    "always-invisible"}
            - entity: input_text.media_card_favourite
              state_action:
                service: floorplan.class_set
                service_data:
                  class: >-
                    ${(entity.state === "true") ? "always-visible" :
                    "always-invisible"}
            - entity: script.media_card_toggle_favourite
              tap_action:
                service: script.turn_on
            - entity: script.media_card_toggle_power
              tap_action:
                service: script.turn_on
            - element: power_button
              state_action:
                service: floorplan.style_set
                service_data:
                  style: >
                    fill:
                    ${(hass.states[hass.states["sensor.media_card_player_id"].state].state
                    === "off") ? "red" : "green"}
            - element: mute_player
              entity: sensor.media_card_mute_mode
              tap_action:
                service: media_player.volume_mute
                service_data:
                  entity_id: ${hass.states["sensor.media_card_player_id"].state}
                  is_volume_muted: '${(entity.state === "True") ? "false" : "true"}'
              state_action:
                service: floorplan.class_set
                service_data:
                  class: >-
                    ${(entity.state === "False") ? "always-visible" :
                    "always-invisible"}
            - entity: sensor.media_card_volume_level
              element: volume_level
              state_action:
                service: floorplan.text_set
                service_data: >-
                  ${(!["unknown", "unavailable"].includes(entity.state)) ?
                  Math.round(entity.state * 100) + "%" : "OFF"}
            - entity: input_select.mp_card_player_friendly_name
              state_action:
                service: floorplan.text_set
                service_data: ${entity.state}
              tap_action:
                service: input_select.select_next
            - element: volume_up
              tap_action:
                service: media_player.volume_up
                service_data:
                  entity_id: ${hass.states["sensor.media_card_player_id"].state}
            - element: volume_down
              tap_action:
                service: media_player.volume_down
                service_data:
                  entity_id: ${hass.states["sensor.media_card_player_id"].state}
            - entity: sensor.media_card_volume_level
              state_action:
                service: floorplan.style_set
                service_data:
                  element: clipPath3
                  style: >
                    >  var width =
                    Math.ceil(elements['sensor.media_card_volume_level'].getBBox().width);
                    return `transform:
                      translate(${-Math.floor((1-entity.state) / (1 /
                      width),0)}px)`;
            - element: play_button
              tap_action:
                service: media_player.media_play_pause
                service_data:
                  entity_id: ${hass.states["sensor.media_card_player_id"].state}
            - element: player_playing
              entity: sensor.media_card_selected_player_state
              state_action:
                service: floorplan.class_set
                service_data:
                  class: >-
                    ${(entity.state === "playing") ? "always-visible" :
                    "always-invisible"}
            - element: next_button
              tap_action:
                service: media_player.media_next_track
                service_data:
                  entity_id: ${hass.states["sensor.media_card_player_id"].state}
            - element: previous_button
              tap_action:
                service: media_player.media_previous_track
                service_data:
                  entity_id: ${hass.states["sensor.media_card_player_id"].state}
            - element: seek_fwd
              tap_action:
                service: script.turn_on
                service_data:
                  entity_id: script.media_card_seek_fwd_30s
            - element: seek_back
              tap_action:
                service: script.turn_on
                service_data:
                  entity_id: script.media_card_seek_back_30s
            - entity: script.media_card_set_shuffle_mode
              tap_action:
                service: script.turn_on
            - element: shuffle_is_on
              entity: input_boolean.mp_card_shuffle_is_on
              state_action:
                service: floorplan.class_set
                service_data:
                  class: >-
                    ${(entity.state === "on") ? "always-visible" :
                    "always-invisible"}
            - entity: script.set_repeat_mode
              tap_action:
                service: script.turn_on
            - name: Repeat Icon
              element: repeat_image
              entity: sensor.media_card_repeat_mode
              state_action:
                service: floorplan.image_set
                service_data: >
                  > var imageName = ''; switch
                  (hass.states[hass.states["sensor.media_card_player_id"].state].attributes.repeat)
                  {
                    case 'all':
                      imageName = 'repeat-all';
                      break;
                    case 'one':
                      imageName = 'repeat-one';
                      break;
                    default:
                      imageName = 'repeat-off';
                      break;
                    }
                  return '/local/floorplan/images/' + imageName + '.png';
            - entity: input_text.current_playing_title
              state_action:
                service: floorplan.text_set
                service_data: ${entity.state}
            - entity: input_text.current_playing_artist
              state_action:
                service: floorplan.text_set
                service_data: ${entity.state}
            - entity: input_text.current_playing_album
              state_action:
                service: floorplan.text_set
                service_data: ${entity.state}
            - entity: input_text.current_track_quality
              state_action:
                action: floorplan.text_set
                service_data: ${entity.state}
            - name: Source Icon
              element: media_card_source_icon
              entity: input_text.media_card_source
              state_action:
                service: floorplan.image_set
                service_data: ${entity.state}
            - entity: input_text.current_track_quality
              state_action:
                service: floorplan.text_set
                service_data: ${entity.state}
            - entity: input_text.next_track
              state_action:
                service: floorplan.text_set
                service_data: ${entity.state}
            - entity: input_boolean.menu_visible
              tap_action:
                - service: input_boolean.toggle
                - service: input_boolean.turn_off
                  service_data:
                    entity_id: input_boolean.link_menu_visible
            - entity: input_boolean.menu_visible
              element: layer3
              state_action:
                service: floorplan.class_set
                service_data:
                  class: '${(entity.state === "on") ? "visible" : "invisible"}'
            - element: playlist_select
              tap_action:
                - service: floorplan.execute
                  service_data:
                    my_custom_exec_calling_browser_mod: |
                      >
                      try{
                        const player_friendly_name = entities["input_select.mp_card_player_friendly_name"].state;
                        console.log("hello",player_friendly_name);
                        browser_mod.service('popup',{
                          title: "Search",
                          content: 
                            {
                              type: "iframe",
                              url: `http://192.168.1.166:8095/#/playlists?frameless=true&player=${player_friendly_name}`,
                            },
                            card_mod: {
                              style: `
                                ha-dialog {
                                  --mdc-dialog-min-width: 1200px !important;
                                  --mdc-dialog-max-width: 1850px !important;
                                }
                                .content {
                                  width: auto !important;
                              }`
                            }
                        });
                      }catch(e){
                        console.log("Well.. That didn't go as planned",e);
                      }
                - service: input_boolean.toggle
                  service_data:
                    entity_id: input_boolean.menu_visible
            - element: album_select
              tap_action:
                - service: floorplan.execute
                  service_data:
                    my_custom_exec_calling_browser_mod: |
                      >
                      try{
                        const player_friendly_name = entities["input_select.mp_card_player_friendly_name"].state;
                        console.log("hello",player_friendly_name);
                        browser_mod.service('popup',{
                          title: "Search",
                          content: 
                            {
                              type: "iframe",
                              url: `http://192.168.1.166:8095/#/albums?frameless=true&player=${player_friendly_name}`,
                            },
                            card_mod: {
                              style: `
                                ha-dialog {
                                  --mdc-dialog-min-width: 1200px !important;
                                  --mdc-dialog-max-width: 1850px !important;
                                }
                                .content {
                                  width: auto !important;
                              }`
                            }
                        });
                      }catch(e){
                        console.log("Well.. That didn't go as planned",e);
                      }
                - service: input_boolean.toggle
                  service_data:
                    entity_id: input_boolean.menu_visible
            - element: artist_select
              tap_action:
                - service: floorplan.execute
                  service_data:
                    my_custom_exec_calling_browser_mod: |
                      >
                      try{
                        const player_friendly_name = entities["input_select.mp_card_player_friendly_name"].state;
                        console.log("hello",player_friendly_name);
                        browser_mod.service('popup',{
                          title: "Search",
                          content: 
                            {
                              type: "iframe",
                              url: `http://192.168.1.166:8095/#/artists?frameless=true&player=${player_friendly_name}`,
                            },
                            card_mod: {
                              style: `
                                ha-dialog {
                                  --mdc-dialog-min-width: fit-content !important;
                                  --mdc-dialog-max-width: 1850px !important;
                                  --mdc-dialog-min-height: fit-content !important;
                                  --mdc-dialog-max-height: 1000px !important;
                                  padding: 0 !important;
                                  margin: 0 !important; 
                                  display: flex;
                                  flex-direction: column;
                                }
                                .content {
                                  width: 90vw !important;
                                  height: 80vh !important;
                                  border: none;
                                  padding: 0 !important;
                                  margin: 0 !important; 
                                  display: flex;
                                  flex-direction: column;
                                }
                                iframe {
                                  width: 85vw !important;
                                  height: 75vh !important;
                                  border: none !important;
                                  display: block;
                                  flex-grow: 1; 
                                }      
                              `
                            }
                        });
                      }catch(e){
                        console.log("Well.. That didn't go as planned",e);
                      }
                - service: input_boolean.toggle
                  service_data:
                    entity_id: input_boolean.menu_visible
            - element: tracks_select
              tap_action:
                - service: floorplan.execute
                  service_data:
                    my_custom_exec_calling_browser_mod: |
                      >
                      try{
                        const player_friendly_name = entities["input_select.mp_card_player_friendly_name"].state;
                        console.log("hello",player_friendly_name);
                        browser_mod.service('popup',{
                          title: "Search",
                          content: 
                            {
                              type: "iframe",
                              url: `http://192.168.1.166:8095/#/tracks?frameless=true&player=${player_friendly_name}`,
                            },
                            card_mod: {
                              style: `
                                ha-dialog {
                                  --mdc-dialog-min-width: 1200px !important;
                                  --mdc-dialog-max-width: 1850px !important;
                                }
                                .content {
                                  width: auto !important;
                              }`
                            }
                        });
                      }catch(e){
                        console.log("Well.. That didn't go as planned",e);
                      }
                - service: input_boolean.toggle
                  service_data:
                    entity_id: input_boolean.menu_visible
            - element: radio_select
              tap_action:
                - service: floorplan.execute
                  service_data:
                    my_custom_exec_calling_browser_mod: |
                      >
                      try{
                        const player_friendly_name = entities["input_select.mp_card_player_friendly_name"].state;
                        console.log("hello",player_friendly_name);
                        browser_mod.service('popup',{
                          title: "Search",
                          content: 
                            {
                              type: "iframe",
                              url: `http://192.168.1.166:8095/#/radios?frameless=true&player=${player_friendly_name}`,
                            },
                            card_mod: {
                              style: `
                                ha-dialog {
                                  --mdc-dialog-min-width: 1200px !important;
                                  --mdc-dialog-max-width: 1850px !important;
                                }
                                .content {
                                  width: auto !important;
                              }`
                            }
                        });
                      }catch(e){
                        console.log("Well.. That didn't go as planned",e);
                      }
                - service: input_boolean.toggle
                  service_data:
                    entity_id: input_boolean.menu_visible
            - element: search_select
              tap_action:
                - service: floorplan.execute
                  service_data:
                    my_custom_exec_calling_browser_mod: |
                      >
                      try{
                        const player_friendly_name = entities["input_select.mp_card_player_friendly_name"].state;
                        console.log("hello",player_friendly_name);
                        browser_mod.service('popup',{
                          title: "Search",
                          content: 
                            {
                              type: "iframe",
                              url: `http://192.168.1.166:8095/#/search?frameless=true&player=${player_friendly_name}`,
                            },
                            card_mod: {
                              style: `
                                ha-dialog {
                                  --mdc-dialog-min-width: 1200px !important;
                                  --mdc-dialog-max-width: 1850px !important;
                                }
                                .content {
                                  width: auto !important;
                              }`
                            }
                        });
                      }catch(e){
                        console.log("Well.. That didn't go as planned",e);
                      }
                - action: input_boolean.toggle
                  service_data:
                    entity_id: input_boolean.menu_visible
            - element: link_select
              tap_action:
                - service: input_boolean.toggle
                  service_data:
                    entity_id: input_boolean.link_menu_visible
                - service: input_boolean.toggle
                  service_data:
                    entity_id: input_boolean.menu_visible
            - entity: input_boolean.link_menu_visible
              element: layer5
              state_action:
                service: floorplan.class_set
                service_data:
                  class: '${(entity.state === "on") ? "visible" : "invisible"}'
            - element: close_link_menu
              tap_action:
                - service: input_boolean.toggle
                  service_data:
                    entity_id: input_boolean.link_menu_visible
            - entity: script.media_card_join_unjoin
              tap_action:
                service: script.turn_on
            - entity: input_boolean.player_is_joined
              state_action:
                service: floorplan.image_set
                service_data: >
                  ${(entity.state === "on") ?
                  "/local/floorplan/images/checkbox-true.svg" :
                  "/local/floorplan/images/checkbox-false.svg"}
            - element: volume0
              tap_action:
                service: media_player.volume_set
                service_data:
                  entity_id: ${hass.states["sensor.media_card_player_id"].state}
                  volume_level: 0
            - element: volume1
              tap_action:
                service: media_player.volume_set
                service_data:
                  entity_id: ${hass.states["sensor.media_card_player_id"].state}
                  volume_level: 0.1
            - element: volume2
              tap_action:
                service: media_player.volume_set
                service_data:
                  entity_id: ${hass.states["sensor.media_card_player_id"].state}
                  volume_level: 0.2
            - element: volume3
              tap_action:
                service: media_player.volume_set
                service_data:
                  entity_id: ${hass.states["sensor.media_card_player_id"].state}
                  volume_level: 0.3
            - element: volume4
              tap_action:
                service: media_player.volume_set
                service_data:
                  entity_id: ${hass.states["sensor.media_card_player_id"].state}
                  volume_level: 0.4
            - element: volume5
              tap_action:
                service: media_player.volume_set
                service_data:
                  entity_id: ${hass.states["sensor.media_card_player_id"].state}
                  volume_level: 0.5
            - element: volume6
              tap_action:
                service: media_player.volume_set
                service_data:
                  entity_id: ${hass.states["sensor.media_card_player_id"].state}
                  volume_level: 0.6
            - element: volume7
              tap_action:
                service: media_player.volume_set
                service_data:
                  entity_id: ${hass.states["sensor.media_card_player_id"].state}
                  volume_level: 0.7
            - element: volume8
              tap_action:
                service: media_player.volume_set
                service_data:
                  entity_id: ${hass.states["sensor.media_card_player_id"].state}
                  volume_level: 0.8
            - element: volume9
              tap_action:
                service: media_player.volume_set
                service_data:
                  entity_id: ${hass.states["sensor.media_card_player_id"].state}
                  volume_level: 0.9
            - element: volume10
              tap_action:
                service: media_player.volume_set
                service_data:
                  entity_id: ${hass.states["sensor.media_card_player_id"].state}
                  volume_level: 1
